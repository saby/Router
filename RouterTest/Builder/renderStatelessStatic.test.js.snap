// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderStatelessStatic main 1`] = `
"<!DOCTYPE html>
<html lang=ru>
  <head>
    <meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" sid=\\"h-ps-1\\">
<meta charset=\\"utf-8\\" class=\\"head-server-block\\" sid=\\"h-ps-2\\">
<script sid=\\"h-ps-3\\" type=\\"text/javascript\\">function getQP() {
    var sD = [\\"wsRoot\\", \\"resourceRoot\\", \\"metaRoot\\", \\"defaultServiceUrl\\", \\"appRoot\\", \\"staticDomains\\", \\"product\\", \\"cdnRoot\\"];
    var r = {};
    var f = [];
    var items = location.search.substring(1).split(\\"&\\");
    for (var index = 0; index < items.length; index++) {
        f = items[index].split(\\"=\\");
        if (sD.indexOf(f[0]) !== -1) {
            var decoded = decodeURIComponent(f[1]);
            r[f[0]] = decoded === \\"staticDomains\\" ? JSON.parse(decoded) : decoded;
        }
    }
    return r;
}
var cfg = window.wsConfig = window.wsConfig || getQP();
cfg.wsRoot = cfg.wsRoot || '/resources/WS.Core';
cfg.resourceRoot = cfg.resourceRoot || '/resources/';
cfg.metaRoot = cfg.metaRoot || '/resources/';
cfg.cdnRoot = cfg.cdnRoot || '/cdn/';
cfg.defaultServiceUrl = cfg.defaultServiceUrl || '/service/';
cfg.appRoot = cfg.appRoot || '/';
cfg.RUMEnabled = false;
cfg.pageName = '';
cfg.userConfigSupport = true;
cfg.trackErrors = true;
cfg.staticDomains = cfg.staticDomains || [];
cfg.compatible = false;
cfg.product = cfg.product || 'undefined';
cfg.xDomainSystemname = '';
window.buildnumber = cfg.buildnumber || undefined;
window['X-UNIQ-ID'] = '';
window['X-REQUESTUUID'] = '';
window['X-CURRENTMETHOD'] = '';
window['csrStartTime'] = Date.now();
function onErrorHandler(name) { window.wsConfig.loadingStatus = window.wsConfig.loadingStatus || {}; window.wsConfig.loadingStatus[name] = 'ERROR'; try { if (window.sessionStorage.getItem('theForceReloadWasEarly')) { window.wsConfig.loadingStatus.theForceReloadWasEarly = true; if (!window.wsConfig.loadingStatus.dialogShown) { setTimeout(function () { var res = window.confirm('При загрузке страницы не все ресурсы были загружены.' +' Страница может работать некорректно. Перезагрузить страницу?'); if (res) { window.location.reload(); } }, 100); window.wsConfig.loadingStatus.dialogShown = true; } return; } window.sessionStorage.setItem('theForceReloadWasEarly', 'true'); window.location.reload(); } catch(err) { /* sessionStorage недоступен */} };
window.themeName = '';</script>
  </head>
  <body >
    <div id=\\"wasaby-content\\" style=\\"width: inherit; height: inherit;\\" application=\\"Module/Index\\">
      <div></div>
    </div>
    <div class=\\"wasabyBaseDeps\\">
      <script type=\\"text/javascript\\" key=\\"require\\" src=\\"/cdn/RequireJS/2.3.5-p10/require.min.js\\" onerror=\\"onErrorHandler('require')\\" sid=\\"s-1\\" defer=\\"defer\\"></script>
    </div>


    <div id=\\"wasabyStartScript\\">
      <script key=\\"init_script\\">        document.addEventListener('DOMContentLoaded', function () {            var wasabyBaseDeps = document.getElementsByClassName('wasabyBaseDeps')[0];            var scripts = [['bundles',window.wsConfig.metaRoot+'bundles.min.js'],['contents',window.wsConfig.metaRoot+'contents.min.js'],['router',window.wsConfig.metaRoot+'router.min.js'],];            var promises = [];            for (var scr of scripts) {                var prms = new Promise((resolve, reject) => {                    var addScript = document.createElement('script');                    addScript.src = scr[1];                    addScript.key = scr[0];                    addScript.onload = function () {                        resolve();                    };                    addScript.onerror = function (event) {                        onErrorHandler(event.target.key);                        reject();                    };                    wasabyBaseDeps.appendChild(addScript);                });                promises.push(prms);            }            Promise.all(promises).then(function () {                /* buildnumber можем достать только из contents.js */                var bNumber = window.contents.buildnumber;                window.wsConfig.buildnumber = bNumber;                window.buildnumber = bNumber;                if (window.contents && window.contents.modules && window.contents.modules.RequireJsLoader && window.contents.modules.RequireJsLoader.buildnumber) {                    bNumber = window.contents.modules.RequireJsLoader.buildnumber;                }                var requireConfigPromise = new Promise((resolve, reject) => {                    var addScript = document.createElement('script');                    addScript.src = window.wsConfig.resourceRoot+'RequireJsLoader/config.min.js?x_module=' + bNumber;                    addScript.key = 'config';                    addScript.onload = function () {                        resolve();                    };                    addScript.onerror = function (event) {                        onErrorHandler(event.target.key);                        reject();                    };                    wasabyBaseDeps.appendChild(addScript);                });                requireConfigPromise.then(function () {                                require(['Env/Env', 'Application/Initializer', 'Application/Env', 'SbisUI/Wasaby', 'UI/Base', 'UI/State', 'Application/State', 'Router/router', 'SbisUI/polyfill'],            function(Env, AppInit, AppEnv, EnvUIWasaby, UIBase, UIState, AppState, router){                Object.assign(Env.constants, window.wsConfig);                require(['WasabyLoader/ModulesLoader','Module/Index'], function(ModulesLoader){                    if (performance && performance.mark) {                        performance.mark('SCRIPTS COMPILING END');                        performance.mark('CORE INIT START');                    }                    var sr = new AppState.StateReceiver(UIState.Serializer);                    AppInit.default(window.wsConfig, void 0, sr);                    var calcMethodName = function(url, maskResolver) {            if (url === '/') {                return 'PSWaSabyRouting.index_html';            }            var params = maskResolver.calculateUrlParams('/:component/:pageId', url);            if (params.component === 'page') {                /* pagex */                return 'PSWaSabyRouting.' + params.pageId;            }            var hyphen = params.component ? '-' : '';            return 'PSWaSabyRouting.' + params.component + hyphen + 'Index';        };        var onChangeState = function(newState) {            if (newState.spaHistory) { window.spaHistory = newState.spaHistory; }            if (newState.href && Router) {                var pageName = calcMethodName(newState.href, Router.maskResolver);                window['X-CURRENTMETHOD'] = pageName;                Env.constants.pageName = pageName;            };        };                    var Router = router.getRootRouter(false, onChangeState);                    UIBase.BootstrapStart({ Router: Router }, document.getElementById('wasaby-content'));                    ModulesLoader.initWarmup();                    try {                        window.sessionStorage.removeItem('theForceReloadWasEarly');                    } catch(err) { /* sessionStorage недоступен */}                    if (performance && performance.mark) {                        performance.mark('CORE INIT END');                    }                });                            });                });            });        });        </script>
    </div>
<div id=\\"sbisEnvUI_errorContainer\\"></div>
<script async src=\\"/cdn/Maintenance/1.0.41/js/checkSoftware.min.js\\"></script>
  </body>
</html>"
`;
